/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/scene.gltf 
Author: Full Barrel Productions (https://sketchfab.com/Full_Barrel_Production)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/spiral-notebook-e803910f62cc40d2a2f5668e657fd1cf
Title: Spiral Notebook
*/

import React, { useRef } from 'react'
import { Decal, useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three';
import { useCustomization } from '../editor/Customize';

function Scene(props) {
  const { coverTexture, spiralColor, setCoverTexture } = useCustomization();
  const { nodes, materials } = useGLTF('./models/scene.gltf');

    // Use a default texture initially
    const defaultTexture = useTexture('./src/assets/moomin-9groke.jpg');

    // If coverTexture is not set, use the default texture
    const currentTexture = coverTexture || defaultTexture;

  //coverTexture.repeat.set(2,2);
  //coverTexture.wrapS = coverTexture.wrapT = THREE.RepeatWrapping;

  return (
    <group {...props} dispose={null}>
      <group scale={0.1}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={50}>
          <mesh geometry={nodes.Spiral_Notebook_Spiral_Notebook_Cover_0.geometry}>
            <meshBasicMaterial transparent opacity={0}/>
            <Decal
            debug
            position={[0, -0.03, 0]}
            rotation={[1.57, 0, 0]}
            scale={[0.25, 0.31, 0.1]}
            >
              <meshBasicMaterial 
                map={currentTexture}
                polygonOffset
                polygonOffsetFactor={1} /> 
            </Decal>
          </mesh>
          <mesh geometry={nodes.Spiral_Notebook_Spiral_Notebook_Backboard_0.geometry} material={materials.Spiral_Notebook_Backboard} />
          <mesh geometry={nodes.Spiral_Notebook_Paper_0.geometry} material={materials.Paper} />
          <mesh geometry={nodes.Spiral_Notebook_Spiral_Chome_0.geometry}>
            <meshBasicMaterial color={new THREE.Color(spiralColor)} />
          </mesh>
        </group>
      </group>
    </group>
  )
}

{/* /*
        <Decal
          // debug // Makes "bounding box" of the decal visible
          position={pos} // Position of the decal
          rotation={rotation} // Rotation of the decal (can be a vector or a degree in radians)
          scale={scale} // Scale of the decal
        >
          <meshStandardMaterial
            map={texture}
            toneMapped={false}
            transparent
            polygonOffset
            polygonOffsetFactor={-1} // The mesh should take precedence over the original
          />
        </Decal>
*/}

export default Scene;

useGLTF.preload('./models/scene.gltf');
